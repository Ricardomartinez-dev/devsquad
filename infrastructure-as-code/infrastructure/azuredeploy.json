{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Environment where resources will be deployed"
      }
    },
    "solutionName": {
      "type": "string",
      "metadata": {
        "description": "Solution name"
      }
    },    
    "location": {
      "type": "string",
      "metadata": {
        "description": "Region where the resource is provisioned"
      }
    }, 
    "servicePrincipal": {
      "type": "string",
      "metadata": {
        "description": "Service Principal for credentials usage"
      }
    },
    "servicePrincipalSecret": {
      "type": "string",
      "metadata": {
        "description": "Service Principal Secret for databricks usage"
      }
    },
    "resourceGroupData": {
      "type": "string",
      "metadata": {
        "description": "Resource group where 'Data' resources will be provisioned"
      }
    },
    "resourceGroupCompute": {
      "type": "string",
      "metadata": {
        "description": "Resource group where 'Compute' resources will be provisioned"
      }
    },
    "resourceGroupManagedDatabricks": {
      "type": "string",
      "metadata": {
        "description": "SKU type name for the dataLake"
      }
    },
    "dataLakeSkuName": {
      "type": "string",
      "metadata": {
        "description": "SKU type name for the datalake"
      }
    },
    "dataFactoryAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure DevOps account name"
      }
    },
    "dataFactoryProjectName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Project name in Azure DevOps account"
      }
    },
    "dataFactoryRepositoryName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure DevOps project repository name for DataFactory"
      }
    },
    "dataFactoryCollaborationBranch": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Collaboration branch: develop"
      }
    },
    "dataFactoryRootFolder": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Root folder of the datafactory: /adf"
      }
    },
    "keyVaultSecretsAdminObjectId": {
      "type": "string",
      "metadata": {
        "description": "ObjectId of the person creating the secrets"
      }
    }
  },
  "functions": [
    {
      "namespace": "naming",
      "members": {
        "default": {
          "parameters": [
            {
              "name": "resourcePurpose",
              "type": "string"
            },
            {
              "name": "uniqueStr",
              "type": "string"
            },
            {
              "name": "environment",
              "type": "string"
            },
            {
              "name": "solutionName",
              "type": "string"
            }            
          ],
          "output": {
            "type": "string",
            "value": "[concat(parameters('resourcePurpose'), '-', parameters('solutionName'), '-', parameters('uniqueStr'), '-',  parameters('environment'))]"
          }
        },
        "clean": {
          "parameters": [
            {
              "name": "resourcePurpose",
              "type": "string"
            },
            {
              "name": "uniqueStr",
              "type": "string"
            },
            {
              "name": "environment",
              "type": "string"
            },
            {
              "name": "solutionName",
              "type": "string"
            }            
          ],
          "output": {
            "type": "string",
            "value": "[concat(parameters('resourcePurpose'), parameters('solutionName'), parameters('uniqueStr'), parameters('environment'))]"
          }
        }
      }
    }
  ],
  "variables": {
    "envMapping": {
      "eastus": "eastus",
      "brazilsouth": "brzsouth"
    },
    "uniqueStr": "ehu",
    "dataDeploymentName": "[concat('data-', deployment().name)]",
    "computeDeploymentName": "[concat('compute-', deployment().name)]",
    "dataRoleAssigmentsDeploymentName": "[concat('data-roleAssigments-', deployment().name)]",
    "computeRoleAssigmentsDeploymentName": "[concat('compute-roleAssigments-', deployment().name)]",
    "dataSourceStorageAccountName": "[naming.clean('stg',variables('uniqueStr'), parameters('environment'), parameters('solutionName'))]",
    "dataLakeName": "[naming.clean('lake',variables('uniqueStr'), parameters('environment'), parameters('solutionName'))]",
    "databricksName": "[naming.default('dbw',variables('uniqueStr'), parameters('environment'), parameters('solutionName'))]",
    "dataFactoryName": "[naming.default('adf',variables('uniqueStr'), parameters('environment'), parameters('solutionName'))]",
    "keyVaultName": "[naming.default('kvt',variables('uniqueStr'), parameters('environment'), parameters('solutionName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[variables('dataDeploymentName')]",
      "resourceGroup": "[parameters('resourceGroupData')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "linkedTemplates/data/template.json"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "dataSourceStorageAccountName": {
            "value": "[variables('dataSourceStorageAccountName')]"
          },          
          "dataLakeName": {
            "value": "[variables('dataLakeName')]"
          },
          "dataLakeSkuName": {
            "value": "[parameters('dataLakeSkuName')]"
          }
        }
      }         
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[variables('computeDeploymentName')]",
      "resourceGroup": "[parameters('resourceGroupCompute')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "linkedTemplates/compute/template.json"
        },
        "parameters": {
          "environment": {
            "value": "[parameters('environment')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "dataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "dataFactoryAccountName": {
            "value": "[parameters('dataFactoryAccountName')]"
          },
          "dataFactoryProjectName": {
            "value": "[parameters('dataFactoryProjectName')]"
          },
          "dataFactoryRepositoryName": {
            "value": "[parameters('dataFactoryRepositoryName')]"
          },
          "dataFactoryCollaborationBranch": {
            "value": "[parameters('dataFactoryCollaborationBranch')]"
          },
          "dataFactoryRootFolder": {
            "value": "[parameters('dataFactoryRootFolder')]"
          },
          "resourceGroupManagedDatabricks": {
            "value": "[parameters('resourceGroupManagedDatabricks')]"
          },
          "databricksName": {
            "value": "[variables('databricksName')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "keyVaultSecrets": {
            "value": {
              "secrets": [           
                {
                  "secretName": "dataLakeName",
                  "secretValue": "[variables('dataLakeName')]"
                }
              ]
            }
          },
          "keyVaultSecretsAdminObjectId": {
            "value": "[parameters('keyVaultSecretsAdminObjectId')]"
          }        
        }
      },
      "dependsOn": [
        "[variables('dataDeploymentName')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[variables('dataRoleAssigmentsDeploymentName')]",
      "resourceGroup": "[parameters('resourceGroupData')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "linkedTemplates/roleAssigments/data.json"
        },
        "parameters": {
          "dataLakeName": {
            "value": "[variables('dataLakeName')]"
          },
          "dataFactoryPrincipalId": {
            "value": "[reference(variables('computeDeploymentName')).outputs.dataFactoryPrincipalId.value]"
          }
        }
      },
      "dependsOn": [
        "[variables('computeDeploymentName')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[variables('computeRoleAssigmentsDeploymentName')]",
      "resourceGroup": "[parameters('resourceGroupCompute')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "linkedTemplates/roleAssigments/compute.json"
        },
        "parameters": {
          "databricksName": {
            "value": "[variables('databricksName')]"
          },
          "dataFactoryPrincipalId": {
            "value": "[reference(variables('computeDeploymentName')).outputs.dataFactoryPrincipalId.value]"
          }
        }
      },
      "dependsOn": [
        "[variables('computeDeploymentName')]"
      ]
    }
  ],
  "outputs": {
    "location": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "resourceGroupData": {
      "type": "string",
      "value": "[parameters('resourceGroupData')]"
    },
    "resourceGroupCompute": {
      "type": "string",
      "value": "[parameters('resourceGroupCompute')]"
    },
    "dataSourceStorageAccountName": {
      "type": "string",
      "value": "[variables('dataSourceStorageAccountName')]"
    },    
    "dataLakeName": {
      "type": "string",
      "value": "[variables('dataLakeName')]"
    },
    "dataLakeSkuName": {
      "type": "string",
      "value": "[parameters('dataLakeSkuName')]"
    },
    "dataFactoryName": {
      "type": "string",
      "value": "[variables('dataFactoryName')]"
    },
    "databricksName": {
      "type": "string",
      "value": "[variables('databricksName')]"
    },
    "databricksWorkspaceUrl": {
      "type": "string",
      "value": "[reference(variables('computeDeploymentName')).outputs.databricksWorkspaceUrl.value]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    }
  }
}
